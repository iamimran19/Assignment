{"version":3,"sources":["App.js","index.js"],"names":["App","useState","fname","lname","email","number","image","fullname","setFullname","details","setDetails","ChangeName","e","value","target","name","preVal","className","type","placeholder","onChange","onClick","alert","length","map","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAwHeA,EAtHH,WAER,MAA+BC,mBAAS,CACpCC,MAAQ,GACRC,MAAQ,GACRC,MAAQ,GACRC,OAAS,GACTC,MAAQ,KALZ,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,EAA6BP,mBAAS,IAAtC,mBAAOQ,EAAP,KAAeC,EAAf,KAGMC,EAAa,SAACC,GAEhB,IAAMC,EAAQD,EAAEE,OAAOD,MACjBE,EAAOH,EAAEE,OAAOC,KAEtBP,GAAY,SAACQ,GAEL,kCACGA,GADH,kBAECD,EAAQF,QAmBrB,OACI,qCACA,sBAAKI,UAAU,2DAAf,UACI,uBACIC,KAAK,OACLH,KAAK,QACLI,YAAY,wBACZC,SAAUT,EACVM,UAAU,UACVJ,MAAON,EAASL,QAEpB,uBACIgB,KAAK,OACLH,KAAK,QACLI,YAAY,uBACZC,SAAUT,EACVM,UAAU,UACVJ,MAAON,EAASJ,QAEpB,uBACIe,KAAK,OACLH,KAAK,QACLI,YAAY,mBACZC,SAAUT,EACVM,UAAU,UACVJ,MAAON,EAASH,QAEpB,uBACIc,KAAK,OACLH,KAAK,SACLI,YAAY,oBACZC,SAAUT,EACVM,UAAU,UACVJ,MAAON,EAASF,SAEpB,uBACIa,KAAK,OACLH,KAAK,QACLK,SAAUT,EACVM,UAAU,UACVJ,MAAON,EAASD,QAEpB,wBAAQW,UAAU,kBAAkBI,QAzDhC,WAERd,EAASL,OAASK,EAASJ,OAASI,EAASH,OAASG,EAASF,QAAUE,EAASD,MAClFI,EAAW,GAAD,mBAAKD,GAAL,CAAaF,KAEvBe,MAAM,0BACNd,EAAY,CACRN,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,MAAO,MA8CP,uBAEA,uBACCG,EAAQc,OAAS,GAClB,qBAAKN,UAAU,YAAf,SACA,wBAAOA,UAAU,qCAAjB,UACI,uBAAOA,UAAU,aAAjB,SACG,+BACK,4CACA,2CACA,uCACA,wCACA,8CAGR,uBAAOA,UAAU,cAAjB,SACKR,EAAQe,KAAI,SAAAC,GAEL,OACQ,+BACI,6BAAKA,EAAKvB,QACV,6BAAKuB,EAAKtB,QACV,6BAAKsB,EAAKrB,QACV,6BAAKqB,EAAKpB,SACV,mCAAMoB,EAAKnB,0BCxGnDoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce0dee65.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () =>\n{   \n    const [fullname,setFullname] = useState({\n        fname : '',\n        lname : '',\n        email : '',\n        number : '',\n        image : ''\n    })\n    const [details,setDetails] = useState([])\n\n\n    const ChangeName = (e) =>\n    {\n        const value = e.target.value\n        const name = e.target.name\n            \n        setFullname((preVal)=>\n            { \n                return{\n                ...preVal,\n                [name] : value\n                }\n            })\n    }\n    const add = () =>\n    {   \n        fullname.fname && fullname.lname && fullname.email && fullname.number && fullname.image ?\n        setDetails([...details,fullname])\n        :\n        alert(\"Fields can't be empty!\")\n        setFullname({\n            fname: '',\n            lname: '',\n            email: '',\n            number: '',\n            image: '',\n        })\n    }\n\n    return (\n        <>\n        <div className=\"mt-5 container d-flex justify-content-center flex-column\">\n            <input \n                type='text'\n                name='fname'\n                placeholder=\"Enter Your First Name\"\n                onChange={ChangeName}\n                className=\"p-2 m-3\"\n                value={fullname.fname}\n            />\n            <input \n                type='text'\n                name='lname'\n                placeholder=\"Enter Your Last Name\"\n                onChange={ChangeName}\n                className=\"p-2 m-3\"\n                value={fullname.lname}\n            />\n            <input \n                type='text'\n                name='email'\n                placeholder=\"Enter Your Email\"\n                onChange={ChangeName}\n                className=\"p-2 m-3\"\n                value={fullname.email}\n            />\n            <input \n                type='text'\n                name='number'\n                placeholder=\"Enter Your Number\"\n                onChange={ChangeName}\n                className=\"p-2 m-3\"\n                value={fullname.number}\n            />\n            <input \n                type='file'\n                name='image'\n                onChange={ChangeName}\n                className=\"p-2 m-3\"\n                value={fullname.image}\n            />\n            <button className=\"btn btn-primary\" onClick={add}>Submit</button>\n        </div>\n            <hr/>\n            {details.length > 0 &&\n            <div className=\"container\">\n            <table className=\"table table-striped table-bordered\">\n                <thead className=\"thead-dark\">\n                   <tr>\n                        <td>First Name</td>\n                        <td>Last Name</td>\n                        <td>Email</td>\n                        <td>Number</td>\n                        <td> image </td>\n                    </tr>\n                </thead>\n                <tbody className=\"table-hover\">\n                    {details.map(data=>\n                        {\n                            return (\n                                    <tr>\n                                        <td>{data.fname}</td>\n                                        <td>{data.lname}</td>\n                                        <td>{data.email}</td>\n                                        <td>{data.number}</td>\n                                        <td> {data.image}</td>\n                                    </tr>\n                                    )\n                                })}\n                </tbody>\n            </table>\n            </div>\n            }\n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-v\n"],"sourceRoot":""}